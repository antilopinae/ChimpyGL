#pragma once#include "component.hpp"namespace Core{class TextCmp : public Component{private:  std::string text_;public:  TextCmp(const std::string& component_name, const std::string& initial_text = "")      : Component(component_name),        text_(initial_text)  {  }public:  void render(float display_w, float display_h) override  {    ImGui::Begin(render_name_.c_str(), nullptr, ImGuiWindowFlags_NoTitleBar);    resizeRightButton(display_w, display_h);    ImGui::BeginChild(      (render_name_ + "_child").c_str(), ImVec2(0, size_h_ * display_h * 0.95f), true, ImGuiWindowFlags_NoTitleBar);    ImGui::TextUnformatted(text_.c_str());    ImGui::EndChild();    ImGui::End();  }  void resetText(const std::string& initial_text = "")  {    text_ = initial_text;  }};}  // namespace Core